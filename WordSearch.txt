//DFS for searching word in all four directions

class Solution {
    public boolean exist(char[][] board, String word) {
        boolean vis[][]=new boolean[board.length][board[0].length];
        for(int i=0;i<board.length;i++){
            for(int j=0;j<board[0].length;j++){
                if(board[i][j]==word.charAt(0) && solve(board,vis,i,j,word,1)){
                    return true;
                }
            }
        }
        return false;
    }
    public static boolean solve(char board[][],boolean vis[][],int i,int j,String word,int ind){
        if(ind==word.length()){
            return true;
        }
        vis[i][j]=true;
        int row[]={-1,0,1,0};
        int col[]={0,-1,0,1};
        for(int k=0;k<4;k++){
            int rrow=row[k]+i;
            int ccol=col[k]+j;
            if(rrow>=0 && ccol>=0 && rrow<board.length && ccol<board[0].length && vis[rrow][ccol]==false && word.charAt(ind)==board[rrow][ccol]){
                if(solve(board,vis,rrow,ccol,word,ind+1)){
                    return true;
                }
            }
        }
        vis[i][j]=false;
        return false;
    }
}